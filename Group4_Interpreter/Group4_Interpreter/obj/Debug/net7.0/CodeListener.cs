//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\group4-interpreter\Group4_Interpreter\Group4_Interpreter\Code.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Group4_Interpreter {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CodeParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ICodeListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.programStructure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgramStructure([NotNull] CodeParser.ProgramStructureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.programStructure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgramStructure([NotNull] CodeParser.ProgramStructureContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.programLines"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgramLines([NotNull] CodeParser.ProgramLinesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.programLines"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgramLines([NotNull] CodeParser.ProgramLinesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.programStatements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgramStatements([NotNull] CodeParser.ProgramStatementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.programStatements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgramStatements([NotNull] CodeParser.ProgramStatementsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.variableInitialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableInitialization([NotNull] CodeParser.VariableInitializationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.variableInitialization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableInitialization([NotNull] CodeParser.VariableInitializationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentOperator([NotNull] CodeParser.AssignmentOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentOperator([NotNull] CodeParser.AssignmentOperatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.beginBlocks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBeginBlocks([NotNull] CodeParser.BeginBlocksContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.beginBlocks"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBeginBlocks([NotNull] CodeParser.BeginBlocksContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.ifCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfCondition([NotNull] CodeParser.IfConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.ifCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfCondition([NotNull] CodeParser.IfConditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.elseIfCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIfCondition([NotNull] CodeParser.ElseIfConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.elseIfCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIfCondition([NotNull] CodeParser.ElseIfConditionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.whileLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileLoop([NotNull] CodeParser.WhileLoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.whileLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileLoop([NotNull] CodeParser.WhileLoopContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.programDataTypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgramDataTypes([NotNull] CodeParser.ProgramDataTypesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.programDataTypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgramDataTypes([NotNull] CodeParser.ProgramDataTypesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.constantValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantValues([NotNull] CodeParser.ConstantValuesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.constantValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantValues([NotNull] CodeParser.ConstantValuesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] CodeParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] CodeParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.multDivModOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultDivModOperators([NotNull] CodeParser.MultDivModOperatorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.multDivModOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultDivModOperators([NotNull] CodeParser.MultDivModOperatorsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.addSubConcatenatorOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddSubConcatenatorOperators([NotNull] CodeParser.AddSubConcatenatorOperatorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.addSubConcatenatorOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddSubConcatenatorOperators([NotNull] CodeParser.AddSubConcatenatorOperatorsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.comparisonOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonOperators([NotNull] CodeParser.ComparisonOperatorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.comparisonOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonOperators([NotNull] CodeParser.ComparisonOperatorsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.logicalOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOperators([NotNull] CodeParser.LogicalOperatorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.logicalOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOperators([NotNull] CodeParser.LogicalOperatorsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.openParenthesis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpenParenthesis([NotNull] CodeParser.OpenParenthesisContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.openParenthesis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpenParenthesis([NotNull] CodeParser.OpenParenthesisContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.closeParenthesis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCloseParenthesis([NotNull] CodeParser.CloseParenthesisContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.closeParenthesis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCloseParenthesis([NotNull] CodeParser.CloseParenthesisContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCall([NotNull] CodeParser.MethodCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCall([NotNull] CodeParser.MethodCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CodeParser.scanFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScanFunction([NotNull] CodeParser.ScanFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CodeParser.scanFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScanFunction([NotNull] CodeParser.ScanFunctionContext context);
}
} // namespace Group4_Interpreter
